# A very simple Flask Hello World app for you to get started with...
import vk_api, random, json
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboardColor,VkKeyboard
import requests
# from flask import Flask
#
# app = Flask(__name__)

admin_panel = {}

class groupClass():
    def __init__(self, token):
        self.token = token
        self.session = vk_api.VkApi(token=self.token)
        self.api = self.session.get_api()
        self.longpoll = VkBotLongPoll(self.session, 186270205)

    def getGroupIndex(self,groupdid):
        try:
            data = json.load(open('base.json',encoding='utf-8'))
        except:
            return -1
        for index in range(len(data)):
            if data[index]['GROUP_ID'] == groupdid:
                return index
        return -1

    def getTemplate(self,groupid):
        return {'GROUP_ID':groupid,'ADMINS':[],'VIPS':[],'Users':{},'Options':{'AutoKick':0,'Greeting':'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å –≤ –Ω–∞—à–µ–π –ª–∞–º–ø–æ–≤–æ–π –±–µ—Å–µ–¥–µ)'}}

    def checkOnAdmin(self,groupid,userid):
        try:
            data = json.load(open('base.json',encoding='utf-8'))
        except:
            data = []
        group_index = self.getGroupIndex(groupdid=groupid)
        if group_index == -1:
            data.append(self.getTemplate(groupid=groupid))
        else:
            for admin in data[group_index]['ADMINS']:
                if admin == userid:
                    return True
        with open('base.json','w',encoding='utf-8') as file:
            json.dump(data,file,indent=2,ensure_ascii=False)
        return False

    def getUserGroups(self,userid):
        group_list = []
        try:
            data = json.load(open('base.json',encoding='utf-8'))
        except:
            return False
        for group_index in range(len(data)):
            for admin in data[group_index]['ADMINS']:
                if admin == userid:
                    group_list.append(data[group_index]['GROUP_ID'])
        return group_list

    def getUserTemplate(self,userid):
        return {'Nick':self.api.users.get(user_ids=userid)[0]['first_name'],'Money':0,'Exp':0,'Lvl':1}

    def checkAction(self,action,memberid,groupid):
        data = json.load(open('base.json',encoding='utf-8'))
        if action['type'] == 'chat_kick_user':
            if action['member_id'] == memberid:
                if self.getGroupIndex(groupdid=groupid) == -1:
                    return False
                if data[self.getGroupIndex(groupdid=groupid)]['Options']['AutoKick'] == 0:
                    return False
                try:
                    self.api.messages.removeChatUser(chat_id=(groupid)%2000000000,user_id=memberid)
                    self.api.messages.send(message='–°–∏—Å—Ç–µ–º–∞ –ê–≤—Ç–æ–ö–∏–∫–∞ –∫–∏–∫–Ω—É–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è vk.com/id{0}.'.format(memberid),peer_id=groupid,random_id=0)
                    if self.checkOnAdmin(groupid=groupid,userid=action['member_id']) == True:
                        with open('base.json','w',encoding='utf-8') as file:
                            data[self.getGroupIndex(groupid)]['ADMINS'].pop(data[self.getGroupIndex(groupid)]['ADMINS'].index(action['member_id']))
                            json.dump(data,file,indent=2,ensure_ascii=False)
                except Exception as Err:
                    if Err == '[27]':
                        self.api.messages.send(message='–ß—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –¥–∞–π—Ç–µ –º–Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –±–µ—Å–µ–¥–µ.',peer_id=groupid,random_id=0)
                return True
            else:
                if self.checkOnAdmin(userid=action['member_id'],groupid=groupid) == True:
                    data[self.getGroupIndex(groupid)]['ADMINS'].pop(data[self.getGroupIndex(groupid)]['ADMINS'].index(action['member_id']))
                    with open('base.json','w',encoding='utf-8') as file:
                        json.dump(data,file,indent=2,ensure_ascii=False)
                    return True

        if action['type'] == 'chat_invite_user':
            if action['member_id'] != memberid and action['member_id'] != -186270205:
                if self.getGroupIndex(groupdid=groupid) == -1:
                    return False
                self.api.messages.send(message='[id{0}|{1}], {2}'.format(str(action['member_id']),self.api.users.get(user_ids=action['member_id'])[0]['first_name'],data[self.getGroupIndex(groupid)]['Options']['Greeting']),peer_id=groupid, random_id=0)
                return True
            elif action['member_id'] == -186270205:
                self.api.messages.send(message='–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –° –≤–∞–º–∏ —Å–µ–≥–æ–¥–Ω—è Moscow Bot!üò±üÜí.',peer_id =groupid,random_id=0)
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–º–∞–Ω–¥—É !–º–µ–Ω—é —á—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –±–æ—Ç–æ–º!üÜï.',peer_id=groupid,random_id=0)
                self.api.messages.send(message='P.S –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ-–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–∞—Ç—å –±–æ—Ç—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.',peer_id=groupid, random_id=0)
                if self.getGroupIndex(groupid) == -1:
                    data.append(self.getTemplate(groupid))
                    with open('base.json','w',encoding='utf-8') as file:
                        json.dump(data,file,indent=2,ensure_ascii=False)
                    return True

        if action['type'] == 'chat_invite_user_by_link':
            self.api.messages.send(message='[id{0}|{1}],{2}'.format(str(action['member_id']),self.api.users.get(user_ids=action['member_id'])[0]['first_name'],data[self.getGroupIndex(groupid)]['Options']['Greeting']), peer_id=groupid, random_id=0)
            return True

    def checkOnUser(self,groupid,user):
        try:
            data = json.load(open('base.json',encoding='utf-8'))
        except Exception as err:
            print('Error {0}'.format(err))
            return False
        if self.getGroupIndex(groupid) == -1:
            return False
        if data[self.getGroupIndex(groupid)]['Users'].get('User_{0}'.format(user)) == None:
            return False
        return True

    def getChatButtons(self,userid):
        keyboard = VkKeyboard(one_time=True)
        for i in self.getUserGroups(userid=userid):
            keyboard.add_button('!–±–µ—Å–µ–¥–∞ {0}'.format(i),color=VkKeyboardColor.POSITIVE)
        return keyboard.get_keyboard()

    def getUserParametr(self,groupid,user,parametr):
        data = json.load(open('base.json', encoding='utf-8'))
        return data[self.getGroupIndex(groupid)]['Users']['User_{0}'.format(user)].get(parametr)

    def setUserParametr(self,groupid,userid,parametr,value):
        data = json.load(open('base.json', encoding='utf-8'))
        data[self.getGroupIndex(groupid)]['Users'].get('User_{0}'.format(userid))[parametr] = value
        with open('base.json','w',encoding='utf-8') as file:
            json.dump(data,file,indent=2,ensure_ascii=False)
        return True

    def getOwner(self,groupid):
        for i in self.api.messages.getConversationMembers(peer_id=groupid)['items']:
            if i.get('is_owner') == True:
                return i['member_id']
        return False
    def checkMessage(self, message, fromid, peerid):
        if len(message.split()) == 0:
            if peerid != fromid:
                if peerid != fromid:
                    exp = 1
                    self.setUserParametr(peerid, fromid, 'Exp', self.getUserParametr(peerid, fromid, 'Exp') + exp)
                    if self.getUserParametr(peerid, fromid, 'Exp') >= 80*1.45 ** self.getUserParametr(peerid, fromid,'Lvl') - 1:
                        self.setUserParametr(peerid, fromid, 'Lvl', self.getUserParametr(peerid, fromid, 'Lvl') + 1)
                        self.setUserParametr(peerid, fromid, 'Exp', 0)
                        self.api.messages.send(message='[id{id}|{name}],–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤–∞—Å —Å –ø–æ–≤—ã—à–µ–Ω–∏–µ–º —É—Ä–æ–≤–Ω—è!üòÉ\n –í–∞—à —Ç–µ–∫—É—à–∏–π —É—Ä–æ–≤–µ–Ω—å {lvl}üÜï'.format(id=fromid, name=self.getUserParametr(peerid, fromid, 'Nick'),lvl=self.getUserParametr(peerid, fromid, 'Lvl')), peer_id=peerid, random_id=0)
            return False
        message = message.split()
        message[0] = message[0].lower()
        message = ' '.join(message)
        if str.find(message.split()[0],'@public186270205') != -1:
            print('–ï—Å—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ')
            message = message.split(None,1)[1]
        if peerid != fromid:
            if self.getGroupIndex(peerid) == -1:
                data = json.load(open('base.json',encoding='utf-8'))
                data.append(self.getTemplate(peerid))
                with open('base.json','w',encoding='utf-8') as file:
                    json.dump(data,file,indent=2,ensure_ascii=False)
                data[self.getGroupIndex(peerid)]['Users']['User_{0}'.format(fromid)] = self.getUserTemplate(fromid)
                with open('base.json','w',encoding='utf-8') as file:
                    json.dump(data,file,indent=2,ensure_ascii=False)
            elif self.checkOnUser(peerid,fromid) == False:
                data = json.load(open('base.json', encoding='utf-8'))
                data[self.getGroupIndex(peerid)]['Users']['User_{0}'.format(fromid)] = self.getUserTemplate(fromid)
                with open('base.json', 'w', encoding='utf-8') as file:
                    json.dump(data, file, indent=2, ensure_ascii=False)
        if admin_panel.get(fromid) != None:
            if self.getGroupIndex(admin_panel.get(fromid)) == -1:
                admin_panel[fromid] = None

        if message.split()[0][0] != '!':
            if peerid != fromid:
                exp = 0
                for word in message.split():
                    exp = len(word)
                self.setUserParametr(peerid,fromid,'Exp',self.getUserParametr(peerid,fromid,'Exp')+exp)
                if self.getUserParametr(peerid,fromid,'Exp') >= 80*1.45**self.getUserParametr(peerid,fromid,'Lvl')-1:
                    self.setUserParametr(peerid,fromid,'Lvl',self.getUserParametr(peerid,fromid,'Lvl')+1)
                    self.setUserParametr(peerid,fromid,'Exp',0)
                    self.api.messages.send(message='[id{id}|{name}],–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤–∞—Å —Å –ø–æ–≤—ã—à–µ–Ω–∏–µ–º —É—Ä–æ–≤–Ω—è!üòÉ\n –í–∞—à —Ç–µ–∫—É—à–∏–π —É—Ä–æ–≤–µ–Ω—å {lvl}üÜï'.format(id=fromid,name=self.getUserParametr(peerid,fromid,'Nick'),lvl=self.getUserParametr(peerid,fromid,'Lvl')),peer_id=peerid,random_id=0)
            return True
        if message.split()[0] == "!–ø—Ä–∏–≤–µ—Ç":
            greetings = ["–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –µ—â—ë —Å–æ–∑–¥–∞—é—Ç —Ç–∞–∫ —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –±–æ–ª—å—à–æ–π,–Ω–æ –≤—Å–∫–æ—Ä–µ –æ–Ω —Å—Ç–∞–Ω–µ—Ç –±–æ–ª—å—à–µ"]
            self.api.messages.send(message=random.choice(greetings), peer_id=peerid, random_id=0)
            return True
        if message.split()[0] == "!–∞–¥–º–∏–Ω":
            self.api.messages.send(message='–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å —É –≤—Ö–æ–¥–∞ –≤ –ê–¥–º–∏–Ω-–ü–∞–Ω–µ–ª—å. –°–µ–π—á–∞—Å –≤–∞—Å –ø—Ä–æ—Å–∫–∞–Ω–∏—Ä—É–µ—Ç GEESER...üë§', peer_id=peerid, random_id=0)
            if peerid == fromid:
                if self.getUserGroups(userid=fromid) == []:
                    self.api.messages.send(message='–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –±–µ—Å–µ–¥—ã –≥–¥–µ –≤—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.üîá',peer_id=peerid,random_id=0)
                    return False
                self.api.messages.send(message='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å —Ö–æ–∑—è–∏–Ω! –í—ã–±–µ—Ä–∏—Ç–µ –±–µ—Å–µ–¥—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è.üë•',peer_id=fromid, random_id=0)
                groups = self.getUserGroups(userid=fromid)
                self.api.messages.send(message='!–±–µ—Å–µ–¥–∞ ' + '\n!–±–µ—Å–µ–¥–∞ '.join(str(group) for group in groups),keyboard=self.getChatButtons(fromid), peer_id=fromid, random_id=0)
                return True
            if self.checkOnAdmin(groupid=peerid,userid=fromid) == False:
                self.api.messages.send(message='–•–º–º... –ó–∞—á–µ–º –æ–±–º–∞–Ω—ã–≤–∞—Ç—å? –£—Ö–æ–¥–∏ –æ—Ç—Å—é–¥–∞!üò°', peer_id=peerid, random_id=0)
                return False
            else:
                try:
                    self.api.messages.send(message='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å —Ö–æ–∑—è–∏–Ω! –í—ã–±–µ—Ä–∏—Ç–µ –±–µ—Å–µ–¥—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è.üë•',peer_id=fromid,random_id=0)
                except Exception as err:
                    if str(err).split()[0] == '[901]':
                        self.api.messages.send(message='–•–æ–∑—è–∏–Ω,–≤—ã –∑–∞–ø—Ä–µ—Ç–∏–ª–∏ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏—è üòî... –ß—Ç–æ–±—ã —Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤—Å—Ç—É–ø–∏—Ç–µ –≤ –≥—Ä—É–ø–ø—É –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.',peer_id=peerid,random_id=0)
                        return False
                groups = self.getUserGroups(userid=fromid)
                chat_keyboard = self.getChatButtons(userid=fromid)
                self.api.messages.send(message='!–±–µ—Å–µ–¥–∞ '+'\n!–±–µ—Å–µ–¥–∞ '.join(str(group) for group in groups),keyboard=chat_keyboard,peer_id=fromid,random_id=0)
                self.api.messages.send(message='ID –ë–µ—Å–µ–¥—ã - {0}üôèüèª'.format(peerid),peer_id=peerid,random_id=0)
                self.api.messages.send(message='–ò–∑–≤–∏–Ω–∏—Ç–µ,—Ö–æ–∑—è–∏–Ω,–Ω–æ —ç—Ç–æ –æ—á–µ–Ω—å —Ü–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è,–æ–∂–∏–¥–∞—é –≤–∞—Å –≤ –õ–°.üîû', peer_id=peerid, random_id=0)
                return True
        if message.split()[0] == '!–±–µ—Å–µ–¥–∞':
            if peerid != fromid:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–º–∞–Ω–¥—É —Ç–æ–ª—å–∫–æ –≤ –õ–°. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–µ–π—á–∞—Å –ø–æ–ª—É—á–∏—Ç–µ –æ—á–µ–Ω—å —Ü–µ–Ω–Ω–∞!‚õî',peer_id=peerid,random_id=0)
                return False
            if len(message.split()) == 1:
                groups = self.getUserGroups(userid=fromid)
                chat_keyboard = self.getChatButtons(userid=fromid)
                self.api.messages.send(message='!–±–µ—Å–µ–¥–∞ ' + '\n!–±–µ—Å–µ–¥–∞ '.join(str(group) for group in groups),keyboard=chat_keyboard, peer_id=fromid, random_id=0)
                return False
            if message.split()[1].isdigit() == False:
                groups = self.getUserGroups(userid=fromid)
                chat_keyboard = self.getChatButtons(userid=fromid)
                self.api.messages.send(message='!–±–µ—Å–µ–¥–∞ ' + '\n!–±–µ—Å–µ–¥–∞ '.join(str(group) for group in groups),keyboard=chat_keyboard, peer_id=fromid, random_id=0)
                return False
            if self.checkOnAdmin(groupid=int(message.split()[1]),userid=fromid) == False:
                self.api.messages.send(message='ERROR!!!',peer_id=peerid,random_id=0)
                admin_panel[fromid] = None
                return False
            keyboard = VkKeyboard(one_time=True)
            keyboard.add_button('!–ù–∞—Å—Ç—Ä–æ–π–∫–∏-–±–µ—Å–µ–¥—ã.üë•', color=VkKeyboardColor.POSITIVE)

            keyboard.add_line()

            keyboard.add_button('!–ù–∞–∫–∞–∑–∞–Ω–∏—è.‚õî', color=VkKeyboardColor.NEGATIVE)

            keyboard.add_line()

            keyboard.add_button('!–í—ã–¥–∞—Ç—å-–ê–¥–º–∏–Ω–∫—É.‚ö†', color=VkKeyboardColor.PRIMARY)
            self.api.messages.send(message='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å —Ö–æ–∑—è–∏–Ω! –ß—Ç–æ –≤—ã –∂–µ–ª–∞–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –≤ –±–µ—Å–µ–¥–µ {0}?'.format(message.split()[1]),keyboard=keyboard.get_keyboard(),random_id=0,peer_id=peerid)
            admin_panel[fromid] = int(message.split()[1])
            return True
        if message.split()[0] == '!–Ω–∞—Å—Ç—Ä–æ–π–∫–∏-–±–µ—Å–µ–¥—ã.üë•' or message.split()[0] == '!–Ω–∞—Å—Ç—Ä–æ–π–∫–∏-–±–µ—Å–µ–¥—ã.' or message.split()[0] == '!–Ω–∞—Å—Ç—Ä–æ–π–∫–∏-–±–µ—Å–µ–¥—ã':
            if peerid != fromid:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–º–∞–Ω–¥—É —Ç–æ–ª—å–∫–æ –≤ –õ–°. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–µ–π—á–∞—Å –ø–æ–ª—É—á–∏—Ç–µ –æ—á–µ–Ω—å —Ü–µ–Ω–Ω–∞!‚õî',peer_id=peerid,random_id=0)
                return False
            if admin_panel.get(fromid) == None:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–Ω–∞—á–∞–ª–æ !–±–µ—Å–µ–¥–∞ [ID –±–µ—Å–µ–¥—ã],–∏–ª–∏ –∂–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ !–∞–¥–º–∏–Ω', peer_id=peerid, random_id=0)
                return False
            if self.checkOnAdmin(userid=fromid, groupid=admin_panel.get(fromid)) == False:
                self.api.messages.send(message='ERROR!!!', peer_id=peerid, random_id=0)
                admin_panel[fromid] = None
                return False
            keyboard = VkKeyboard(one_time=True)
            keyboard.add_button('!–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ê–¥–º–∏–Ω-–ü–∞–Ω–µ–ª—å', color=VkKeyboardColor.DEFAULT)
            keyboard.add_button('!–≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –í—ã–±–æ—Ä—É –ë–µ—Å–µ–¥', color=VkKeyboardColor.DEFAULT)
            self.api.messages.send(message='–î–µ—Ä–∂–∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ—Å–µ–¥—ã: \n1.!—Å–º–µ–Ω–∏—Ç—å-–∏–º—è [–ù–æ–≤–æ–µ –∏–º—è –±–µ—Å–µ–¥—ã];\n2.!–∞–≤—Ç–æ–∫–∏–∫ [1 –∏–ª–∏ 0] (–ê–≤—Ç–æ–∫–∏–∫ –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ –±–µ—Å–µ–¥—ã);\n3.!–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ [–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ];\n\nP.S –ù–∞ —ç—Ç–æ–º –ø–æ–∫–∞ –≤—Å—ë,–Ω–æ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –Ω–∞–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π!üì¢',peer_id=peerid,random_id=0,keyboard=keyboard.get_keyboard())
            return True
        if message.split()[0] == '!—Å–º–µ–Ω–∏—Ç—å-–∏–º—è':
            if peerid != fromid:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–º–∞–Ω–¥—É —Ç–æ–ª—å–∫–æ –≤ –õ–°. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–µ–π—á–∞—Å –ø–æ–ª—É—á–∏—Ç–µ –æ—á–µ–Ω—å —Ü–µ–Ω–Ω–∞!‚õî',peer_id=peerid,random_id=0)
                return False
            if admin_panel.get(fromid) == None:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–Ω–∞—á–∞–ª–æ !–±–µ—Å–µ–¥–∞ [ID –±–µ—Å–µ–¥—ã],–∏–ª–∏ –∂–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ !–∞–¥–º–∏–Ω',peer_id=peerid,random_id=0)
                return False
            if self.checkOnAdmin(userid=fromid,groupid=admin_panel.get(fromid)) == False:
                self.api.messages.send(message='ERROR!!!',peer_id=peerid, random_id=0)
                admin_panel[fromid] = None
                return False
            keyboard = VkKeyboard(one_time=True)
            keyboard.add_button('!–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ê–¥–º–∏–Ω-–ü–∞–Ω–µ–ª—å', color=VkKeyboardColor.DEFAULT)
            keyboard.add_button('!–≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –í—ã–±–æ—Ä—É –ë–µ—Å–µ–¥', color=VkKeyboardColor.DEFAULT)
            if len(message.split()) == 1:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !—Å–º–µ–Ω–∏—Ç—å-–∏–º—è [–ù–æ–≤–æ–µ –∏–º—è –±–µ—Å–µ–¥—ã]',peer_id=peerid,random_id=0,keyboard=keyboard.get_keyboard())
                return False
            chatid=(admin_panel[fromid])%200000000
            name = message.split()
            name.pop(0)
            try:
                self.api.messages.editChat(chat_id=chatid,title=' '.join(name))
                self.api.messages.send(message='–ò–º—è –±–µ—Å–µ–¥—ã –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ - "{0}", –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º - @id{1}'.format(' '.join(name),fromid),peer_id=admin_panel.get(fromid),random_id=0)
                self.api.messages.send(message='–£—Å–ø–µ—à–Ω–æ!‚úÖ',peer_id=peerid, random_id=0)
            except Exception as error:
                if error.split()[0] == '[27]':
                    self.api.messages.send('–ß—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –¥–∞–π—Ç–µ –º–Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –±–µ—Å–µ–¥–µ.')
            keyboard = VkKeyboard(one_time=True)
            keyboard.add_button('!–ù–∞—Å—Ç—Ä–æ–π–∫–∏-–±–µ—Å–µ–¥—ã.üë•', color=VkKeyboardColor.POSITIVE)

            keyboard.add_line()

            keyboard.add_button('!–ù–∞–∫–∞–∑–∞–Ω–∏—è.‚õî', color=VkKeyboardColor.NEGATIVE)

            keyboard.add_line()

            keyboard.add_button('!–í—ã–¥–∞—Ç—å-–ê–¥–º–∏–Ω–∫—É.‚ö†', color=VkKeyboardColor.PRIMARY)
            self.api.messages.send(message='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å —Ö–æ–∑—è–∏–Ω! –ß—Ç–æ –≤—ã –∂–µ–ª–∞–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –≤ –±–µ—Å–µ–¥–µ {0}?'.format(admin_panel.get(fromid)),keyboard=keyboard.get_keyboard(), random_id=0, peer_id=peerid)
            return True
        if message.split()[0] == '!–≤—ã–¥–∞—Ç—å-–∞–¥–º–∏–Ω–∫—É.‚ö†' or message.split()[0] == '!–≤—ã–¥–∞—Ç—å-–∞–¥–º–∏–Ω–∫—É' or message.split()[0] == '!–≤—ã–¥–∞—Ç—å-–∞–¥–º–∏–Ω–∫—É':
            if peerid != fromid:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–º–∞–Ω–¥—É —Ç–æ–ª—å–∫–æ –≤ –õ–°. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–µ–π—á–∞—Å –ø–æ–ª—É—á–∏—Ç–µ –æ—á–µ–Ω—å —Ü–µ–Ω–Ω–∞!‚õî',peer_id=peerid,random_id=0)
                return False
            if admin_panel.get(fromid) == None:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–Ω–∞—á–∞–ª–æ !–±–µ—Å–µ–¥–∞ [ID –±–µ—Å–µ–¥—ã],–∏–ª–∏ –∂–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ !–∞–¥–º–∏–Ω',peer_id=peerid, random_id=0)
                return False
            if self.checkOnAdmin(userid=fromid,groupid=admin_panel.get(fromid)) == False:
                self.api.messages.send(message='ERROR!!!', peer_id=peerid, random_id=0)
                admin_panel[fromid] = None
                return False
            keyboard = VkKeyboard(one_time=True)
            keyboard.add_button('!–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ê–¥–º–∏–Ω-–ü–∞–Ω–µ–ª—å', color=VkKeyboardColor.DEFAULT)
            keyboard.add_button('!–≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –í—ã–±–æ—Ä—É –ë–µ—Å–µ–¥', color=VkKeyboardColor.DEFAULT)
            if len(message.split()) == 1:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !–≤—ã–¥–∞—Ç—å-–∞–¥–º–∏–Ω–∫—É [ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]',peer_id=peerid,random_id=0,keyboard=keyboard.get_keyboard())
                return False
            if message.split()[1].isdigit() == False:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !–≤—ã–¥–∞—Ç—å-–∞–¥–º–∏–Ω–∫—É [ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]',peer_id=peerid,random_id=0,keyboard=keyboard.get_keyboard())
                return False
            if self.checkOnAdmin(groupid=admin_panel.get(fromid),userid=int(message.split()[1])) == True:
                self.api.messages.send(message='–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!üó£',peer_id=peerid,random_id=0,keyboard=keyboard.get_keyboard())
                return False
            try:
                data = json.load(open('base.json',encoding='utf-8'))
            except:
                return False
            data[self.getGroupIndex(groupdid=admin_panel[fromid])]['ADMINS'].append(int(message.split()[1]))
            with open('base.json','w',encoding='utf-8') as file:
                json.dump(data,file,indent=2,ensure_ascii=False)
            self.api.messages.send(message='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - @id{0},–≤—ã–¥–∞–ª –∞–¥–º–∏–Ω–∫—É - @id{1}'.format(fromid,message.split()[1]),random_id=0,peer_id=admin_panel.get(fromid))
            self.api.messages.send(message='–£—Å–ø–µ—à–Ω–æ!‚úÖ', peer_id=peerid, random_id=0)
            keyboard = VkKeyboard(one_time=True)
            keyboard.add_button('!–ù–∞—Å—Ç—Ä–æ–π–∫–∏-–±–µ—Å–µ–¥—ã.üë•', color=VkKeyboardColor.POSITIVE)

            keyboard.add_line()

            keyboard.add_button('!–ù–∞–∫–∞–∑–∞–Ω–∏—è.‚õî', color=VkKeyboardColor.NEGATIVE)

            keyboard.add_line()

            keyboard.add_button('!–í—ã–¥–∞—Ç—å-–ê–¥–º–∏–Ω–∫—É.‚ö†', color=VkKeyboardColor.PRIMARY)
            self.api.messages.send(message='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å —Ö–æ–∑—è–∏–Ω! –ß—Ç–æ –≤—ã –∂–µ–ª–∞–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –≤ –±–µ—Å–µ–¥–µ {0}?'.format(admin_panel.get(fromid)),keyboard=keyboard.get_keyboard(), random_id=0, peer_id=peerid)
            return True
        if message.split()[0] == '!–∞–≤—Ç–æ–∫–∏–∫':
            if peerid != fromid:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–º–∞–Ω–¥—É —Ç–æ–ª—å–∫–æ –≤ –õ–°. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–µ–π—á–∞—Å –ø–æ–ª—É—á–∏—Ç–µ –æ—á–µ–Ω—å —Ü–µ–Ω–Ω–∞!‚õî',peer_id=peerid,random_id=0)
                return False
            if admin_panel.get(fromid) == None:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–Ω–∞—á–∞–ª–æ !–±–µ—Å–µ–¥–∞ [ID –±–µ—Å–µ–¥—ã],–∏–ª–∏ –∂–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ !–∞–¥–º–∏–Ω',peer_id=peerid, random_id=0)
                return False
            if self.checkOnAdmin(userid=fromid,groupid=admin_panel.get(fromid)) == False:
                self.api.messages.send(message='ERROR!!!', peer_id=peerid, random_id=0)
                admin_panel[fromid] = None
                return False
            keyboard = VkKeyboard(one_time=True)
            keyboard.add_button('!–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ê–¥–º–∏–Ω-–ü–∞–Ω–µ–ª—å', color=VkKeyboardColor.DEFAULT)
            keyboard.add_button('!–≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –í—ã–±–æ—Ä—É –ë–µ—Å–µ–¥', color=VkKeyboardColor.DEFAULT)
            if len(message.split()) == 1:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !–∞–≤—Ç–æ–∫–∏–∫ [1 –∏–ª–∏ 0]',peer_id=peerid,random_id=0,keyboard=keyboard.get_keyboard())
                return False
            if message.split()[1] == '1' or message.split()[1] == '0':
                try:
                    data = json.load(open('base.json',encoding='utf-8'))
                except:
                    return False
                data[self.getGroupIndex(admin_panel.get(fromid))]['Options']['AutoKick'] = int(message.split()[1])
                with open('base.json','w',encoding='utf-8') as file:
                    json.dump(data,file,indent=2,ensure_ascii=False)
                self.api.messages.send(message='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - @id{0},–∏–∑–º–µ–Ω–∏–ª –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ê–≤—Ç–æ–ö–∏–∫ –Ω–∞ {1}.üò±'.format(fromid,message.split()[1]),peer_id=admin_panel.get(fromid),random_id=0)
                self.api.messages.send(message='–£—Å–ø–µ—à–Ω–æ!‚úÖ', peer_id=peerid, random_id=0)
                keyboard = VkKeyboard(one_time=True)
                keyboard.add_button('!–ù–∞—Å—Ç—Ä–æ–π–∫–∏-–±–µ—Å–µ–¥—ã.üë•', color=VkKeyboardColor.POSITIVE)

                keyboard.add_line()

                keyboard.add_button('!–ù–∞–∫–∞–∑–∞–Ω–∏—è.‚õî', color=VkKeyboardColor.NEGATIVE)

                keyboard.add_line()

                keyboard.add_button('!–í—ã–¥–∞—Ç—å-–ê–¥–º–∏–Ω–∫—É.‚ö†', color=VkKeyboardColor.PRIMARY)
                self.api.messages.send(message='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å —Ö–æ–∑—è–∏–Ω! –ß—Ç–æ –≤—ã –∂–µ–ª–∞–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –≤ –±–µ—Å–µ–¥–µ {0}?'.format(admin_panel.get(fromid)),keyboard=keyboard.get_keyboard(), random_id=0, peer_id=peerid)
                return True

        if message.split()[0] == '!id':
            if peerid == fromid:
                self.api.messages.send(message='–≠—Ç–∞ –∫–æ–º–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–∞—Ö.',peer_id=peerid,random_id=0)
                return False
            if len(message.split()) == 1:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !id @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',peer_id=peerid,random_id=0)
                return False
            if str.find(message.split()[1],'id') == -1:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !id @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',peer_id=peerid,random_id=0)
                return False
            if str.find(message.split()[1],'|') == -1:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !id @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',peer_id=peerid,random_id=0)
                return False
            id = message.split()[1][str.find(message.split()[1],'id')+2:str.find(message.split()[1],'|')]
            if id == '':
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !id @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', peer_id=peerid, random_id=0)
                return False
            if id.isdigit() == False:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !id @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', peer_id=peerid, random_id=0)
                return False
            self.api.messages.send(message='ID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - @id{0}, {1}'.format(id,id),peer_id=peerid,random_id=0)
            return True
        if message.split()[0] == '!–æ–±—ä—è–≤–ª–µ–Ω–∏–µ':
            pass
        if message.split()[0] == '!–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ' or message.split()[0] == '!greeting':
            if peerid != fromid:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–º–∞–Ω–¥—É —Ç–æ–ª—å–∫–æ –≤ –õ–°. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–µ–π—á–∞—Å –ø–æ–ª—É—á–∏—Ç–µ –æ—á–µ–Ω—å —Ü–µ–Ω–Ω–∞!‚õî',peer_id=peerid,random_id=0)
                return False
            if admin_panel.get(fromid) == None:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–Ω–∞—á–∞–ª–æ !–±–µ—Å–µ–¥–∞ [ID –±–µ—Å–µ–¥—ã],–∏–ª–∏ –∂–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ !–∞–¥–º–∏–Ω',peer_id=peerid, random_id=0)
                return False
            if self.checkOnAdmin(userid=fromid,groupid=admin_panel.get(fromid)) == False:
                self.api.messages.send(message='ERROR!!!', peer_id=peerid, random_id=0)
                admin_panel[fromid] = None
                return False
            keyboard = VkKeyboard(one_time=True)
            keyboard.add_button('!–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ê–¥–º–∏–Ω-–ü–∞–Ω–µ–ª—å', color=VkKeyboardColor.DEFAULT)
            keyboard.add_button('!–≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –í—ã–±–æ—Ä—É –ë–µ—Å–µ–¥', color=VkKeyboardColor.DEFAULT)
            if len(message.split()) == 1:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ [–ü—Ä–∏–≤–µ—Ç—Å–≤–∏–µ]',peer_id=peerid,random_id=0,keyboard=keyboard.get_keyboard())
                return False
            try:
                data = json.load(open('base.json',encoding='utf-8'))
            except:
                self.api.messages(message='–§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞!üÜò –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞ - vk.com/viiruset6rjet, –∏ –±—É–¥–µ—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω—ã –º–æ–Ω–µ—Ç–∞–º–∏)',peer_id=peerid,random_id=0,keyboard=keyboard)
                return False
            greeting = message.split()
            greeting.pop(0)
            data[self.getGroupIndex(groupdid=admin_panel.get(fromid))]['Options']['Greeting'] = ' '.join(greeting)
            with open('base.json','w',encoding='utf-8') as file:
                json.dump(data,file,indent=2,ensure_ascii=False)
            self.api.messages.send(message='–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ - "{0}", –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º - @id{1}'.format(' '.join(greeting),fromid),peer_id=admin_panel.get(fromid), random_id=0)
            self.api.messages.send(message='–£—Å–ø–µ—à–Ω–æ!‚úÖ', peer_id=peerid, random_id=0)
            keyboard = VkKeyboard(one_time=True)
            keyboard.add_button('!–ù–∞—Å—Ç—Ä–æ–π–∫–∏-–±–µ—Å–µ–¥—ã.üë•', color=VkKeyboardColor.POSITIVE)

            keyboard.add_line()

            keyboard.add_button('!–ù–∞–∫–∞–∑–∞–Ω–∏—è.‚õî', color=VkKeyboardColor.NEGATIVE)

            keyboard.add_line()

            keyboard.add_button('!–í—ã–¥–∞—Ç—å-–ê–¥–º–∏–Ω–∫—É.‚ö†', color=VkKeyboardColor.PRIMARY)
            self.api.messages.send(message='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å —Ö–æ–∑—è–∏–Ω! –ß—Ç–æ –≤—ã –∂–µ–ª–∞–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –≤ –±–µ—Å–µ–¥–µ {0}?'.format(admin_panel.get(fromid)),keyboard=keyboard.get_keyboard(), random_id=0, peer_id=peerid)
            return True
        if message.lower() == '!–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å.' or message.lower() == '!–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å':
            if peerid != fromid:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–º–∞–Ω–¥—É —Ç–æ–ª—å–∫–æ –≤ –õ–°. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–µ–π—á–∞—Å –ø–æ–ª—É—á–∏—Ç–µ –æ—á–µ–Ω—å —Ü–µ–Ω–Ω–∞!‚õî',peer_id=peerid, random_id=0)
                return False
            if admin_panel.get(fromid) == None:
                self.api.messages.send(message='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ –∫–∞–∫—É—é –ª–∏–±–æ –≥—Ä—É–ø–ø—É.üîá –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ !–∞–¥–º–∏–Ω',peer_id=peerid,random_id=0)
                return False
            if self.checkOnAdmin(groupid=admin_panel.get(fromid),userid=fromid) == False:
                self.api.messages.send(message='ERROR!!!',peer_id=peerid, random_id=0)
                admin_panel[fromid] = None
                return False
            keyboard = VkKeyboard(one_time=True)
            keyboard.add_button('!–ù–∞—Å—Ç—Ä–æ–π–∫–∏-–±–µ—Å–µ–¥—ã.üë•', color=VkKeyboardColor.POSITIVE)

            keyboard.add_line()

            keyboard.add_button('!–ù–∞–∫–∞–∑–∞–Ω–∏—è.‚õî', color=VkKeyboardColor.NEGATIVE)

            keyboard.add_line()

            keyboard.add_button('!–í—ã–¥–∞—Ç—å-–ê–¥–º–∏–Ω–∫—É.‚ö†', color=VkKeyboardColor.PRIMARY)
            self.api.messages.send(message='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å —Ö–æ–∑—è–∏–Ω! –ß—Ç–æ –≤—ã –∂–µ–ª–∞–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –≤ –±–µ—Å–µ–¥–µ {0}?'.format(admin_panel.get(fromid)),keyboard=keyboard.get_keyboard(), random_id=0, peer_id=peerid)
            return True
        if message.lower() == '!–≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –±–µ—Å–µ–¥' or message.lower() == '!–≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –±–µ—Å–µ–¥.':
            admin_panel[fromid] = None
            self.api.messages.send(message='–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å —É –≤—Ö–æ–¥–∞ –≤ –ê–¥–º–∏–Ω-–ü–∞–Ω–µ–ª—å. –°–µ–π—á–∞—Å –≤–∞—Å –ø—Ä–æ—Å–∫–∞–Ω–∏—Ä—É–µ—Ç GEESER...üë§',peer_id=peerid, random_id=0)
            if peerid == fromid:
                if self.getUserGroups(userid=fromid) == []:
                    self.api.messages.send(message='–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –±–µ—Å–µ–¥—ã –≥–¥–µ –≤—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.üîá', peer_id=peerid,random_id=0)
                    return False
                self.api.messages.send(message='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å —Ö–æ–∑—è–∏–Ω! –í—ã–±–µ—Ä–∏—Ç–µ –±–µ—Å–µ–¥—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è.üë•',peer_id=fromid, random_id=0)
                groups = self.getUserGroups(userid=fromid)
                self.api.messages.send(message='!–±–µ—Å–µ–¥–∞ ' + '\n!–±–µ—Å–µ–¥–∞ '.join(str(group) for group in groups),keyboard=self.getChatButtons(fromid), peer_id=fromid, random_id=0)
                return True
            self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–º–∞–Ω–¥—É —Ç–æ–ª—å–∫–æ –≤ –õ–°. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–µ–π—á–∞—Å –ø–æ–ª—É—á–∏—Ç–µ –æ—á–µ–Ω—å —Ü–µ–Ω–Ω–∞!‚õî',peer_id=peerid,random_id=0)
            return True
        if message.split()[0] == '!–Ω–∞–∫–∞–∑–∞–Ω–∏—è' or message.split()[0] == '!–Ω–∞–∫–∞–∑–∞–Ω–∏—è.‚õî':
            if peerid != fromid:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–º–∞–Ω–¥—É —Ç–æ–ª—å–∫–æ –≤ –õ–°. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–µ–π—á–∞—Å –ø–æ–ª—É—á–∏—Ç–µ –æ—á–µ–Ω—å —Ü–µ–Ω–Ω–∞!‚õî',peer_id=peerid, random_id=0)
                return False
            if admin_panel.get(fromid) == None:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–Ω–∞—á–∞–ª–æ !–±–µ—Å–µ–¥–∞ [ID –±–µ—Å–µ–¥—ã],–∏–ª–∏ –∂–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ !–∞–¥–º–∏–Ω',peer_id=peerid, random_id=0)
                return False
            if self.checkOnAdmin(userid=fromid, groupid=admin_panel.get(fromid)) == False:
                self.api.messages.send(message='ERROR!!!', peer_id=peerid, random_id=0)
                admin_panel[fromid] = None
                return False
            keyboard = VkKeyboard(one_time=True)
            keyboard.add_button('!–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ê–¥–º–∏–Ω-–ü–∞–Ω–µ–ª—å', color=VkKeyboardColor.DEFAULT)
            keyboard.add_button('!–≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –í—ã–±–æ—Ä—É –ë–µ—Å–µ–¥', color=VkKeyboardColor.DEFAULT)
            self.api.messages.send(message='''–ö–æ–º–º–∞–Ω–¥—ã –¥–ª—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π‚õî:
1.üïõ!–ö–∏–∫ [ID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]
2.‚ò†!–ë–∞–Ω [ID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] (–ë–∞–Ω–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–≤—Å–µ–≥–¥–∞)
3.üò∑!–†–∞–∑–±–∞–Ω [ID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] (–†–∞–∑–±–∞–Ω–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
4.üëø!–ë–∞–Ω-–ª–∏—Å—Ç
5.üé≠!–ú—É—Ç [ID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] [–≤—Ä–µ–º—è]
6.üîä!–†–∞–∑–º—É—Ç [ID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]''',peer_id=peerid,random_id=0,keyboard=keyboard.get_keyboard())
            return True
        if message.split()[0] == '!–∫–∏–∫':
            if peerid != fromid:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–º–∞–Ω–¥—É —Ç–æ–ª—å–∫–æ –≤ –õ–°. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–µ–π—á–∞—Å –ø–æ–ª—É—á–∏—Ç–µ –æ—á–µ–Ω—å —Ü–µ–Ω–Ω–∞!‚õî',peer_id=peerid, random_id=0)
                return False
            if admin_panel.get(fromid) == None:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–Ω–∞—á–∞–ª–æ !–±–µ—Å–µ–¥–∞ [ID –±–µ—Å–µ–¥—ã],–∏–ª–∏ –∂–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ !–∞–¥–º–∏–Ω',peer_id=peerid, random_id=0)
                return False
            if self.checkOnAdmin(userid=fromid, groupid=admin_panel.get(fromid)) == False:
                self.api.messages.send(message='ERROR!!!', peer_id=peerid, random_id=0)
                admin_panel[fromid] = None
                return False
            keyboard = VkKeyboard(one_time=True)
            keyboard.add_button('!–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ê–¥–º–∏–Ω-–ü–∞–Ω–µ–ª—å', color=VkKeyboardColor.DEFAULT)
            keyboard.add_button('!–≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –í—ã–±–æ—Ä—É –ë–µ—Å–µ–¥', color=VkKeyboardColor.DEFAULT)
            if len(message.split()) == 1:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !–ö–∏–∫ [ID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]',peer_id=peerid,random_id=0,keyboard=keyboard.get_keyboard())
                return False
            if message.split()[1].isdigit() == False:
                self.api.messages.send(message='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !–ö–∏–∫ [ID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]', peer_id=peerid, random_id=0,keyboard=keyboard.get_keyboard())
                return False
            if self.checkOnAdmin(admin_panel.get(fromid),int(message.split()[1])) == True:
                if fromid != self.getOwner(admin_panel.get(fromid)):
                    self.api.messages.send(message='–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ—Å—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏ –µ–≥–æ –º–æ–∂–µ—Ç –∫–∏–∫–Ω—É—Ç—å —Ç–æ–ª—å–∫–æ –°–æ–∑–¥–∞—Ç–µ–ª—å –±–µ—Å–µ–¥—ã.',peer_id=peerid,random_id=0,keyboard=keyboard.get_keyboard())
                    return False
            try:
                self.api.messages.removeChatUser(chat_id=admin_panel.get(fromid)%2000000000,user_id=int(message.split()[1]))
                self.api.messages.send(message='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - @id{id},–∫–∏–∫–Ω—É–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - vk.com/id{pid}'.format(id=fromid,pid=message.split()[1]), peer_id=admin_panel.get(fromid), random_id=0)
                self.api.messages.send(message='–£—Å–ø–µ—à–Ω–æ!‚úÖ', peer_id=peerid, random_id=0,keyboard=keyboard.get_keyboard())
            except Exception as Err:
                if str(Err).split()[0] == '[15]':
                    self.api.messages.send(message='–£ –º–µ–Ω—è –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤,—á—Ç–æ–±—ã –∫–∏–∫–Ω—É—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.',peer_id=peerid,random_id=0,keyboard=keyboard.get_keyboard())
                    return False
                if str(Err).split()[0] == '[935]':
                    self.api.messages.send(message='–î–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–µ—Å–µ–¥–µ.',peer_id=peerid, random_id=0, keyboard=keyboard.get_keyboard())
                    return False
            return True
        if message.split()[0] == '!–º–µ–Ω—é':
            if peerid == fromid:
                self.api.messages.send(message='–≠—Ç–∞ –∫–æ–º–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–∞—Ö.\n\nP.S –≠—Ç–æ—Ç –±–æ—Ç –±—ã–ª —Å–¥–µ–ª–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –±–µ—Å–µ–¥.',peer_id=peerid,random_id=0)
                return False
            self.api.messages.send(message='''[id{id}|{name}],üíª–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ (–∫–æ—Ç–æ—Ä—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç)
(–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)
1.üèÖ !Lvl
2.ü•á !Top_lvl
                                                
(–î–ª—è –∞–¥–º–∏–Ω–æ–≤)
3.üë§ !–ê–¥–º–∏–Ω
4.üë• !–ê–¥–º–∏–Ω-–ª–∏—Å—Ç (—Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤)
5.‚ö° !–í—ã–¥–∞—Ç—å-–ê–¥–º–∏–Ω–∫—É '''.format(id=fromid,name=self.getUserParametr(peerid,fromid,'Nick')),peer_id=peerid,random_id=0)

            return True
        if message.split()[0] == '!–∞–¥–º–∏–Ω—ã' or message.split()[0] == '!–∞–¥–º–∏–Ω-–ª–∏—Å—Ç':
            if peerid == fromid:
                self.api.messages.send(message='–≠—Ç–∞ –∫–æ–º–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–∞—Ö.',peer_id=peerid,random_id=0)
                return False
            data = json.load(open('base.json',encoding='utf-8'))
            if data[self.getGroupIndex(groupdid=peerid)]['ADMINS'] == []:
                self.api.messages.send(message='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –¥–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ –Ω–µ—Ç...\n‚Å£‚Äå‚Äå‚Äç‚ÄçP.S‚Äå‚Äå‚Äç‚Äç‚Äå‚Äå‚Äç‚Äç‚Äå‚Äå‚Äç‚Äç –ö–ê–ö –¢–ê–ö?!üò±',peer_id=peerid,random_id=0)
                return False
            admins = []
            for i in data[self.getGroupIndex(peerid)]['ADMINS']:
                admins.append('\n{smile}–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {name} - vk.com/id{id}'.format(smile=random.choice(['‚ò¢','‚ò£','‚ö†']),name=self.getUserParametr(peerid,i,'Nick'),id=i))
            self.api.messages.send(message='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –≤ –¥–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ: '+''.join(admins) ,peer_id=peerid,random_id=0)
            return True
        if message.split()[0] == '!lvl':
            if peerid == fromid:
                self.api.messages.send(message='–≠—Ç–∞ –∫–æ–º–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–∞—Ö.\n\nP.S –≠—Ç–æ—Ç –±–æ—Ç –±—ã–ª —Å–¥–µ–ª–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –±–µ—Å–µ–¥.',peer_id=peerid,random_id=0)
                return False
            self.api.messages.send(message='[id{id}|{name}], –≤–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å - {lvl}üòé.\n–î–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –æ—Å—Ç–∞–ª–æ—Å—å - {exp} EXP'.format(id=fromid,name=self.getUserParametr(peerid,fromid,'Nick'),lvl=self.getUserParametr(peerid,fromid,'Lvl'),exp=int((80*1.45**self.getUserParametr(peerid,fromid,'Lvl'))-(self.getUserParametr(peerid,fromid,'Exp')))),peer_id=peerid,random_id=0)
            return True
        if message.split()[0] == '!toplvl':
            if peerid == fromid:
                self.api.messages.send(message='–≠—Ç–∞ –∫–æ–º–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–∞—Ö.\n\nP.S –≠—Ç–æ—Ç –±–æ—Ç –±—ã–ª —Å–¥–µ–ª–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –±–µ—Å–µ–¥.',peer_id=peerid,random_id=0)
                return False
            data = json.load(open('base.json',encoding='utf-8'))
            userlvls = {}
            for key in data[self.getGroupIndex(peerid)]['Users'].keys():
                userlvls[key] = data[self.getGroupIndex(peerid)]['Users'][key]['Lvl']
            userlvls = sorted(userlvls.items(),key=lambda x: x[1],reverse=True)
            print(userlvls)
            textarr = []
            for i in range(1,len(userlvls)+1):
                if i > 3:
                    break
                textarr.append('\n{number}.{Nick} (vk.com/id{id}) - {Lvl} LVL{smile};'.format(number=i,Lvl=self.getUserParametr(peerid,userlvls[i-1][0].replace('User_',''),'Lvl'),Nick=self.getUserParametr(peerid,userlvls[i-1][0].replace('User_',''),'Nick'),id=userlvls[i-1][0].replace('User_',''),smile=random.choice(['üò±','üòé','üòÉ'])))
            self.api.messages.send(message='–¢–æ–ø –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —ç—Ç–æ–π –±–µ—Å–µ–¥—ã:'+''.join(textarr),peer_id=peerid,random_id=0)
            return True


    def mainListener(self):
        try:
            for event in self.longpoll.listen():
                if event.type == VkBotEventType.MESSAGE_NEW:
                    print(event)
                    if event.object.get('action') != None:
                            self.checkAction(action=event.object['action'],memberid=event.object.from_id,groupid=event.object.peer_id)
                    else:
                        self.checkMessage(message=event.object.text, fromid=event.object.from_id, peerid=event.object.peer_id)
        except requests.exceptions.ReadTimeout:
            print('–¢–∞–π–º-–∞—É—Ç')


vk = groupClass("2db78121cb8b152f2affab74d213cb8f2c3e94bc9faed556c5638eaa451adf4b14679932a40660dfdc4f5")
vk.mainListener()